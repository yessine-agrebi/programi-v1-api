// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId    Int        @id @default(autoincrement())
  email     String     @unique
  password  String
  firstName String
  lastName  String
  height    Int?
  weight    Float?
  age       Int?
  programs  Program[]
  exercises Exercise[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Program {
  programId   Int       @id @default(autoincrement())
  programName String
  description String?
  startDate   DateTime? @db.Date()
  endDate     DateTime? @db.Date()
  user        User      @relation(fields: [userId], references: [userId])
  userId      Int
  workouts    Workout[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Exercise {
  exerciseId   Int    @id @default(autoincrement())
  exerciseName String
  bodyPart     String
  equipment    String
  user         User   @relation(fields: [userId], references: [userId])
  userId       Int
  bestSetId    Int?
  workout   Workout[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Workout {
  workoutId  Int      @id @default(autoincrement())
  program    Program  @relation(fields: [programId], references: [programId])
  programId  Int
  exercise   Exercise @relation(fields: [exerciseId], references: [exerciseId])
  exerciseId Int
  date       DateTime @db.Date()
  sets       Set[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Set {
  setId     Int      @id @default(autoincrement())
  weight    Float
  reps      Int
  setNum    Int
  workout   Workout  @relation(fields: [workoutId], references: [workoutId])
  workoutId Int
  isBestSet Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
